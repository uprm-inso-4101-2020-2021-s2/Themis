syntax = "proto3";
package uprminso410120202021s2.Themis.Themis;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/uprm-inso-4101-2020-2021-s2/Themis/x/Themis/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc CreateVote(MsgCreateVote) returns (MsgCreateVoteResponse);
  rpc UpdateVote(MsgUpdateVote) returns (MsgUpdateVoteResponse);
  rpc DeleteVote(MsgDeleteVote) returns (MsgDeleteVoteResponse);
  rpc CreatePoll(MsgCreatePoll) returns (MsgCreatePollResponse);
  rpc UpdatePoll(MsgUpdatePoll) returns (MsgUpdatePollResponse);
  rpc DeletePoll(MsgDeletePoll) returns (MsgDeletePollResponse);
  rpc CreateGroup(MsgCreateGroup) returns (MsgCreateGroupResponse);
  rpc UpdateGroup(MsgUpdateGroup) returns (MsgUpdateGroupResponse);
  rpc DeleteGroup(MsgDeleteGroup) returns (MsgDeleteGroupResponse);
  rpc CreateAccount(MsgCreateAccount) returns (MsgCreateAccountResponse);
  rpc UpdateAccount(MsgUpdateAccount) returns (MsgUpdateAccountResponse);
  rpc DeleteAccount(MsgDeleteAccount) returns (MsgDeleteAccountResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgCreateVote {
  string creator = 1;
  uint64 poll = 2;
  string option = 3;
}

message MsgCreateVoteResponse {
  uint64 id = 1;
}

message MsgUpdateVote {
  string creator = 1;
  uint64 id = 2;
  string option = 3;
}

message MsgUpdateVoteResponse { }

message MsgDeleteVote {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteVoteResponse { }

message MsgCreatePoll {
  string creator = 1;
  string name = 2;
  uint64 group = 3;
  repeated string votes = 4;
  string description = 5;
  uint64 deadline = 6;
}

message MsgCreatePollResponse {
  uint64 id = 1;
}

message MsgUpdatePoll {
  string creator = 1;
  uint64 id = 2;
  string description = 6;
  uint64 deadline = 7;
}

message MsgUpdatePollResponse { }

message MsgDeletePoll {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeletePollResponse { }

message MsgCreateGroup {
  string name = 1;
  string owner = 2;
}

message MsgCreateGroupResponse {
  uint64 id = 1;
}

message MsgUpdateGroup {
  uint64 id = 1;
  string name = 2;
  string owner = 3;
  string newOwner = 4;
}

message MsgUpdateGroupResponse { }

message MsgDeleteGroup {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteGroupResponse { }

message MsgCreateAccount {
  string creator = 1;
  string name = 2;
}

message MsgCreateAccountResponse {
  uint64 id = 1;
}

message MsgUpdateAccount {
  string creator = 1;
  uint64 id = 2;
  string name = 3;
}

message MsgUpdateAccountResponse { }

message MsgDeleteAccount {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteAccountResponse { }
